/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   HttpRespond.hpp                                  :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: sharnvon <sharnvon@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/08/04 20:20:16 by sharnvon          #+#    #+#             */
/*   Updated: 2023/08/14 10:48:25 by sharnvon         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef HTTPRESPOND_HPP
# define HTTPRESPOND_HPP

# include <iostream>
# include <vector>
# include "../Webserv.hpp"
# include "../conf/Config.hpp"
# include "HttpRequest.hpp"

class HttpRespond
{
	private:
		HttpRequest						_request;
		std::string						_contentType;
		std::string						_statusCode;
		std::string						_httpVersion;
		char							*_bodyContent;
		int								_contentLength;
		int								_headerLength;
		bool							_cgi;
		int								_code;
		std::string						_respondHeader;
		std::vector<int, std::string>	_listCode;

	public:
		HttpRespond(void);
		HttpRespond(int fd, Config const &server);
		HttpRespond(HttpRespond const &src);
		~HttpRespond(void);
		HttpRespond		&operator=(HttpRespond const &rhs);
		std::string			getRespond(void) const;
		int					getRespondLength(void) const;
		HttpRequest const	&getRequest(void) const;
		std::string const	&getContentType(void) const;
		std::string const	&getStatusCode(void) const;
		std::string const	&getHttpVersion(void) const;
		char const			*getBodyContent(void) const;
		int					getBodyLength(void) const;
		int					getHeaderLength(void) const;
		void				setRespondHeader(std::string const &respondHeader);
		int					getCode(void) const;
		void				sendRepond(int socket) const;
};

std::ostream	&operator<<(std::ostream &out, HttpRespond const &rhs);

#endif